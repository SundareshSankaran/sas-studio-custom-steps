{"creationTimeStamp":"2025-06-17T09:53:13.117Z","modifiedTimeStamp":"2025-06-25T06:05:06.802Z","createdBy":"Remco.Gooijer@sas.com","modifiedBy":"Remco.Gooijer@sas.com","name":"Fork Run.step","displayName":"Fork Run.step","localDisplayName":"Fork Run.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75"},{"method":"POST","rel":"copy","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75/copy","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75/copy","responseType":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","uri":"/dataFlows/steps/22f4f026-914a-4a82-b9b1-d03c293dfd75","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[{"name":"_output","displayName":"_output","localDisplayName":"_output","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Fork Run Properties\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_jobname\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Specify the deployed object name: (Case sensitive!)\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_output\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output table label:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Fork Run custom step\\n===============\\n\\nStart/execute a deployed object, a SAS Studio Flow or SAS program.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Changelog\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"* Version 1.0 (25JUN2025)\\n- Initial release\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"_jobname\": \"\",\n\t\t\"_output\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"%let job_uri=;\n%let nbr_job_rows=0;\n\n/*\n\tCreate the output table.\n*/\ndata &_output;\n\tattrib id length=$36.;\n\tattrib job_name length=$128.;\n\tattrib state length=$32.;\n\tattrib start_dttm length=8 format=datetime22.3;\n\tstop;\nrun;\n\n/*\n\tCreate the value for the viyaHost macro variable.\n*/\ndata _null_; \n\tcall symputx('viyaHost', kreverse(ksubstr(ksubstr(kreverse(\"&_BASEURL.\"), 2), kfind(ksubstr(kreverse(\"&_BASEURL.\"), 2), '/') + 1)));\nrun;\n\n/*\n\tThe following macro is there to retrieve the job definition uri, based on the (deployed) job name entered\n\tby the end-user.\n*/\n%macro get_job_uri\n(\n\tjob_name=\t\n);\n\t%if %unquote(%str(%')&job_name%str(%')) ne '' %then %do;\n\n\t\t/*\n\t\t\tSetup and execute the http request.\n\t\t*/\n\t\tfilename joburi temp;\n\t\tproc http\n\t\t\turl = \"&viyahost./jobExecution/jobRequests\"\n\t\t\tout= joburi\n\t\t\tmethod='get'\n\t\t\t\toauth_bearer = sas_services\n\t\t\t\t%if &job_name ne %then %do;\n\t\t\t\t\tquery= ('filter' = \"eq('name', '&job_name')\");\n\t\t\t\t%end;\n\t\t\t\t%else %do;\n\t\t\t\t\t;\n\t\t\t\t%end;\n\t\t\theaders\n\t\t\t\t'Accept'= 'application/vnd.sas.collection+json';\n\t\trun;\t\n\n\t\t/*\n\t\t\tProcess the response file, if it exists.\n\t\t*/\n\t\t%if %sysfunc(fexist(joburi)) %then %do;\n\n\t\t\tlibname joburi json;\n\t\t\t/*\n\t\t\t\tCheck that the items table exists.\n\t\t\t*/\n\t\t\t%if %sysfunc(exist(joburi.items)) %then %do;\n\t\t\t\t/*\n\t\t\t\t\tSelect the jobs for which the URI exists.\n\n\t\t\t\t\tNote that for this to work, the columns 'name' and 'jobDefinitionUri' need\n\t\t\t\t\tto exist in the response file!\n\t\t\t\t*/\n\t\t\t\t%let ds = %sysfunc(open(joburi.items));\n\t\t\t\t%if &ds > 0 %then %do;\n\t\t\t\t\t%let dsName = %sysfunc(varnum(&ds, name));\n\t\t\t\t\t%let dsUri = %sysfunc(varnum(&ds, jobDefinitionUri));\n\t\t\t\t\t%let rc = %sysfunc(close(&ds));\n\n\t\t\t\t\t%if &dsName and &dsUri %then %do;\n\t\t\t\t\t\tdata job_uri;\n\t\t\t\t\t\t\tset joburi.items\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tkeep = \n\t\t\t\t\t\t\t\t\tname \n\t\t\t\t\t\t\t\t\tjobDefinitionUri \n\t\t\t\t\t\t\t\twhere = \n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tjobDefinitionUri ~= ''\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\trun;\n\t\t\t\t\t\n\t\t\t\t\t\tlibname joburi;\n\t\t\t\t\t%end;\n\t\t\t\t\t%else %do;\n\t\t\t\t\t\t%put ERROR: Importants columns do not exist in the response file. Aborting process.;\n\t\t\t\t\t\t%abort exit;\n\t\t\t\t\t%end;\n\t\t\t\t%end;\n\t\t\t\t%else %do;\n\t\t\t\t\t%put ERROR: Unable to open the 'items' array. Aborting process.;\n\t\t\t\t\t%abort exit;\n\t\t\t\t%end;\t\n\t\t\t%end;\n\t\t\t%else %do;\n\t\t\t\t%put ERROR: The items array in the response file does not exist. Aborting process.;\n\t\t\t\t%abort exit;\n\t\t\t%end;\n\t\t%end;\n\t\t%else %do;\n\t\t\t%put ERROR: The response file does not exist. Aborting process.;\n\t\t\t%abort exit;\n\t\t%end;\n\n\t\t/*\n\t\t\tAssign the job uri to the 'job_uri' macro variable.\n\t\t*/\n\t\t%if %sysfunc(exist(work.job_uri)) %then %do;\n\n\t\t\t/*\n\t\t\t\tCount the number of jobs returned.\n\t\t\t\tOnly continue in case the number equals to 1.\n\t\t\t*/\n\t\t\tdata _null_;\n\t\t\t\tif 0 then set work.job_uri nobs=rows;\n\t\t\t\tcall symputx('nbr_job_rows', rows);\n\t\t\trun;\n\n\t\t\t/*\n\t\t\t\tAbort in case the number of returned values isn't exactly one.\n\t\t\t*/\n\t\t\t%if &nbr_job_rows NE 1 %then %do;\n\t\t\t\t%put ERROR: &nbr_job_rows jobs encountered with name &job_name. Aborting process.;\n\t\t\t\t%abort exit;\n\t\t\t%end;\n\t\t\t%else %do;\n\t\t\t\tdata _null_;\n\t\t\t\t\tset\n\t\t\t\t\t\twork.job_uri;\n\t\t\t\t\tcall symputx(\"job_uri\", kstrip(jobDefinitionUri));\n\t\t\t\trun;\t\t\n\t\t\t%end;\n\t\t%end;\n\t\t%else %do;\n\t\t\t%put ERROR: job_uri table does not exist. Aborting process.;\n\t\t\t%abort exit;\n\t\t%end;\n\t%end;\n\t%else %do;\n\t\t%put ERROR: No deployed object name provided. Aborting process.;\n\t\t%abort exit;\n\t%end;\n%mend;\n%get_job_uri(\n\tjob_name = &_jobname\n);\n\n%macro exec_job\n(\n\tjob_uri=\n);\n\n\t%if %unquote(%str(%')&job_uri%str(%')) ne '' %then %do;\n\n\t\t/*\n\t\t\tCreate the JSON file for the execute request.\n\t\t*/\n\t\tfilename request temp;\n\t\tproc json out=request nosastags;\n\t\t\twrite open object;\n\t\t\t\twrite values \"name\" \"&_jobname\";\n\t\t\t\twrite values \"jobDefinitionUri\" \"&job_uri\";\n\t\t\twrite close;\n\t\trun;\t\t\n\t\n\t\t/*\n\t\t\tSetup and execute the HTTP request.\n\t\t*/\n\t\tfilename response temp;\n\t\tproc http\n\t\t\turl = \"&viyahost./jobExecution/jobs?submitter=workflow\"\n\t\t\tin = request\n\t\t\tout = response\n\t\t\tmethod='post'\n\t\t\t\toauth_bearer = sas_services;\n\t\t\theaders\n\t\t\t\t'Content-Type'='application/vnd.sas.job.execution.job.request+json'\n\t\t\t\t'Accept'='application/vnd.sas.job.execution.job+json';\n\t\trun;\n\n\t\t%if %sysfunc(fexist(response)) %then %do;\n\t\t\t/*\n\t\t\t\tAdd the state, should be 'running', of the current job to the execute_status table.\n\t\t\t\n\t\t\t\tNote that the column specification can differ. This will cause warnings during the PROC APPEND step.\n\t\t\t\tThat is why the resulting table firstly needs to be created based on the internally defined status table.\n\t\t\t*/\n\t\t\tlibname resp json fileref=response;\n\t\t\tdata &_output(drop=creationTimeStamp);\n\t\t\t\tattrib job_name length=$128.;\n\t\t\t\tattrib start_dttm length=8 format=datetime22.3;\n\t\t\t\tattrib state length=$32.;\n\t\t\t\tset \n\t\t\t\t\t&_output(obs=0)\n\t\t\t\tresp.root(keep=id state creationTimeStamp);\n\n\t\t\t\tstart_dttm = input(creationTimeStamp, E8601DZ.);\n\t\t\t\tjob_name = \"&_jobname\";\n\t\t\trun;\n\n\t\t\tlibname resp;\n\t\t%end;\n\t\t%else %do;\n\t\t\t%put ERROR: The response file does not exist. Aborting process.;\n\t\t\t%abort exit;\n\t\t%end;\n\t%end;\n\t%else %do;\n\t\t%put ERROR: No URI provided. Unable to execute the deployed object. Aborting process.;\n\t\t%abort exit;\n\t%end;\n%mend;\n\n%exec_job(\n\tjob_uri=&job_uri\n);\n\n/*\n\tRemove not needed macro variables.\n*/\n%symdel job_uri /nowarn;\n%symdel nbr_job_rows /nowarn;\n\n/*\n\tRemove not needed macros\n*/\n%sysmacdelete get_job_uri /nowarn;\n%sysmacdelete exec_job /nowarn;"}}