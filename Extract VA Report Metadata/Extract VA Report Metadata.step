{"creationTimeStamp":"2024-06-14T18:32:15.904Z","modifiedTimeStamp":"2025-06-03T07:34:45.878Z","createdBy":"Ethan.Kavanaugh@sas.com","modifiedBy":"Remco.Gooijer@sas.com","name":"Extract VA Report Metadata.step","displayName":"Extract VA Report Metadata.step","localDisplayName":"Extract VA Report Metadata.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9"},{"method":"POST","rel":"copy","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9/copy","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9/copy","responseType":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","uri":"/dataFlows/steps/79f56b02-2d9d-430b-82de-7f9dfd1372d9","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[{"name":"_output1","displayName":"_output1","localDisplayName":"_output1","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Extract VA Report Metadata Properties\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_report\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Select SAS Visual Analytics report:\",\n\t\t\t\t\t\"pathtype\": \"file\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_output1\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Metadata information:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Extract VA Report Metadata step\\n======================\\n\\nThis custom step extracts metadata information from a SAS Visual Studio report. The mentioned metadata starts with the CAS librar(y)(ies) and follows the CAS table(s), the CAS table columns, the report columns, the calculated columns and the usage of the report/calculated columns in the different report objects.\\n\\nThe only thing it needs is a SAS Visual Analytics report.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Changelog\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"* Version 1.5 (03JUN2025)\\n- Added three additional columns to the output table.\\n- Extracting additional report metadata.\\n\\n* Version 1.4 (20MAY2025)\\n- Removed several small issues.\\n- Added the reportModifier to the output table.\\n\\n* Version 1.3 (16APR2024)\\n- Small GUI changes.\\n- Removed a small issue.\\n- Name change.\\n\\n* Version 1.2 (08APR2024)\\n- Added UTF8 support.\\n- Released internally\\n\\n* Version 1.1 (08AUG2023)\\n- Code with additional functionality added by Michael Herrmann.\\n- Released internally\\n\\n* Version 1.0 (18JUL2023)\\n- Initial internal release.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"_report\": \"\",\n\t\t\"_output1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"%let base_uri=%sysfunc(getoption(SERVICESBASEURL));\n\n/*\n\tFrom the _report macro variable create a separate value for report and path.\n*/\ndata _null_;\n\tcall symputx('report', kreverse(kscan(kreverse(kscan(\"&_report\", 2, ':')), 1, '/')));\n\tcall symputx(\"path\", kreverse(ksubstr(kreverse(kscan(\"&_report\", 2, ':')), kfind(kreverse(kscan(\"&_report\", 2, ':')), '/'))));\nrun;\n\n/*\n\tBased on the 'path' macro variable retrieve the endpoint to give me the folder members/content.\n*/\nfilename ref temp ;\nproc http\n    url = \"&base_uri./folders/folders/@item\"\n    \tquery = (\"path\" = \"&path\")\n\t    oauth_bearer = sas_services\n\tout= ref;\n    headers\n         'Accept'= 'application/vnd.sas.content.folder+json';\nrun;\nlibname ref json;\n\n/*\n\tFrom the links table, store the member end-point and the content type into macro variables.\n*/\nproc sql noprint;\n    select \n\t\thref, \n\t\ttype into :endpoint, :type\n    from \n\t\tref.links\n    where \n\t\tmethod = \"GET\" and \n\t\trel = \"members\";\nquit; \n\n/*\n\tRetrieve the members/content within the directory\n\t\n\tNote the limit addition.\n*/\nfilename members temp; \nproc http\n    url = \"&base_uri.%trim(&endpoint)?limit=100\"\n\t\toauth_bearer = sas_services\n    out= members;\n    headers\n        \"Accept\"= \"%trim(&type)+json\";\nrun; \nlibname members json;\n\n/*\n\tGet the reportId, reportName, the report creation/update timestamps and the creater/updater from the response file.\n*/\nproc sql noprint;\n\tselect\n\t\tkstrip(kreverse(kscan(kreverse(uri), 1, '/'))) as reportId length=64,\n\t\tname as reportName, \n\t\tmodifiedBy,\n\t\tcreatedBy, \n\t\tput(input(creationTimeStamp, E8601DT19.), datetime22.) as reportCreateTS,\n\t\tput(input(modifiedTimeStamp, E8601DT19.), datetime22.) as reportUpdateTS\t \n\t\t\tinto \n\t\t\t\t:reportId, \n\t\t\t\t:reportName, \n\t\t\t\t:reportModifiedBy, \n\t\t\t\t:reportCreatedBy, \n\t\t\t\t:reportCreateTS, \n\t\t\t\t:reportUpdateTS\n\tfrom\n\t\tmembers.items\n\twhere\n\t\tname = \"&report\";\nquit;\n\n/*\n\tShow the extracted information in the log.\n*/\n%put &=reportId;\n%put &=reportName;\n%put &=reportCreatedBy;\n%put &=reportModifiedBy;\n%put &=reportCreateTS;\n%put &=reportUpdateTS;\n\n%macro columns_in_item\n(\n\tdataset=,\n\titem=,\n\tcolumns_key=,\n\titem_key=\n);\n\t%let expressions = 0;\n\t\n\t%if %sysfunc(exist(resp.&dataset.)) %then %do;\n\t\t%let expressions = 1;\n\t\tproc sql noprint;\n\t\t\tselect &item_key from resp.&dataset.;\n\t\tquit;\n\t\n\t\t%if &sqlobs eq 0 or &expressions eq 0 %then %do;\n\t\t\t%put NOTE: No &item columns found.;\n\t\t%end;\n\t\t%else %do;\n\t\t\t%if &dataset eq ITEMS_EXPRESSION %then %do;\n\t\t\t\tproc sql noprint;\n\t\t\t\t\tselect\n\t\t\t\t\t\tname into :all_columns separated by ' '\n\t\t\t\t\tfrom\n\t\t\t\t\t\tresp.BUSINESSITEMFOLDER_ITEMS \n\t\t\t\t\twhere \n\t\t\t\t\t\t_element eq \"DataItem\";\n\t\t\t\tquit;\n\t\t\t\n\t\t\t\t%if &sqlobs eq 0 or &all_columns eq %then %do;\n\t\t\t\t\t%put NOTE: No calculated columns found.;\t\n\t\t\t\t%end;\n\t\t\t\t%else %do;\n\t\t\t\t\t%let in_calculated_columns =;\n\t\t\t\t\t%local i next_name;\n\n\t\t\t\t\t%do i = 1 %to %sysfunc(kcountw(&all_columns));\n\t\t\t\t\t\t%let next_name = %scan(&all_columns, &i);\n\n\t\t\t\t\t\tdata k;\n\t\t\t\t\t\t\tset\n\t\t\t\t\t\t\t\tresp.ITEMS_EXPRESSION;\n\t\t\t\t\t\t\tb = kfind(value, \"{\"||\"&next_name\"||\",\");\n\t\t\t\t\t\trun;\n\n\t\t\t\t\t\tproc sql noprint;\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\t\tk\n\t\t\t\t\t\t\twhere\n\t\t\t\t\t\t\t\tb ne 0;\n\t\t\t\t\t\tquit;\n\n\t\t\t\t\t\tproc delete data=k; run;\n\n\t\t\t\t\t\t%if &sqlobs ne 0 %then %do;\n\t\t\t\t\t\t\t%let in_calculated_columns = &in_calculated_columns \"&next_name\";\n\t\t\t\t\t\t%end;\n\t\t\t\t\t%end;\n\t\t\t\t\n\t\t\t\t%end;\n\t\t\t\t%if &in_calculated_columns eq %then %do;\n\t\t\t\t\t%let in_calculated_columns = '';\n\t\t\t\t\t%put NOTE: No calculated columns found.;\n\t\t\t\t%end;\n\t\t\t%end;\n\t\t\n\t\t\tproc sql noprint;\n\t\t\t\tcreate table item_table_temp as\n\t\t\t\tselect distinct\n\t\t\t\t\tbf.name as columnid length=64,\n\t\t\t\t\tbf.xref as xref length=64,\n\t\t\t\t\tbf.label as label length=64,\n\t\t\t\t\tbf._element as columnType length=32,\n\t\t\t\t\tbf.ordinal_businessItemFolder as data,\n\t\t\t\t\t\"\" as dataset length=64,\n\t\t\t\t\t\"\" as expression length=512,\n\t\t\t\t\t\"\" as expression_raw length=512\n\t\t\t\tfrom\n\t\t\t\t\tresp.BUSINESSITEMFOLDER_ITEMS bf,\n\t\t\t\t\tresp.&dataset cd\n\t\t\t\n\t\t\t\t%if &dataset ne ITEMS_EXPRESSION %then %do;\n\t\t\t\t\twhere\n\t\t\t\t\t\tbf.&columns_key. = cd.&item_key. and\n\t\t\t\t\t\tbf._element eq \"DataItem\"\n\t\t\t\t%end;\n\t\t\t\t%else %do;\n\t\t\t\t\twhere\n\t\t\t\t\t\tbf.name in (&in_calculated_columns);\n\t\t\t\t%end;\n\t\t\t\t;\n\t\t\tquit;\n\n\t\t\tproc sql noprint;\n\t\t\t\tselect distinct\n\t\t\t\t\tquote(kstrip(columnid)) into :&item separated by ' '\n\t\t\t\tfrom\n\t\t\t\t\titem_table_temp;\t\t\t\t\n\t\t\tquit;\n\n\t\t\t%if &sqlobs. ne 0 %then %do;\n\t\t\t\tdata temp_item;\n\t\t\t\t\tset\n\t\t\t\t\t\tcolumns;\n\t\t\t\trun;\n\n\t\t\t\tproc sql noprint;\n\t\t\t\t\tcreate table columns as\n\t\t\t\t\tselect\n\t\t\t\t\t\t*\n\t\t\t\t\tfrom \n\t\t\t\t\t\ttemp_item union all\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\t\titem_table_temp except all select * from temp_item\n\t\t\t\t\t\t);\n\t\t\t\tquit;\n\t\t\t%end;\n\t\t%end;\n\t%end;\n\t%else %do;\n\t\t%put NOTE: &item columns found. resp.&dataset does not exist.;\n\t%end;\n%mend;\n\n%macro GetReportResources\n(\n\treportName=,\n\treportId=,\n\treportModifiedBy=,\n\treportCreatedBy=,\n\treportCreateTS=,\n\treportUpdateTS=\n);\n\t/*\n\t\tSetup the REST API call to retrieve the rapport definition.\n\t*/\n\tfilename resp temp;\n\tproc http\n\t\tmethod='get'\n\t\turl = \"&base_uri./reports/reports/&reportId./content\"\n\t\t\toauth_bearer = sas_services\n\t\tout=resp;\n\t\theaders\n\t\t\t'Accept'='application/vnd.sas.report.content+json';\n\t\tdebug level=0 OFF;\n\trun;\n\n\t/*\n\t\tCheck if we have a response file.\n\t*/\n\t%if %sysfunc(fexist(resp)) %then %do;\n\t\tlibname resp json NO_REOPEN_MSG NOALLDATA MEMLEAVE=ALL JSONCOMPRESS ORDINALCOUNT=2;\n\n\t\t/*\n\t\t\tValidate that the BUSINESSITEMFOLDER_ITEMS, DATADEFINITIONS_BUSINESSITEMS and VISUALELEMENTS_DATALIST tables exist.\n\t\t\tIn case one of these tables do not exist, make it know to the end user by using the message: \n\t\t\t'ERROR: Unable to extract report metadata for ...'\n\t\t*/\n\t\t%if %sysfunc(exist(resp.BUSINESSITEMFOLDER_ITEMS)) and \n\t\t\t%sysfunc(exist(resp.DATADEFINITIONS_BUSINESSITEMS)) and \n\t\t\t%sysfunc(exist(resp.VISUALELEMENTS_DATALIST)) %then %do;\n\t\t\t\n\t\t\t/*\n\t\t\t\tCheck if the 'ITEMS_EXPRESSION' table exists.\n\n\t\t\t\tNote that this table only exists when the report contains calculated columns.\n\t\t\t*/\n\t\t\t%let table_exists = 0;\n\t\t\t%if %sysfunc(exist(resp.items_expression)) %then %do;\n\t\t\t\t%let table_exists = 1;\n\t\t\t%end;\n\n\t\t\t/*\n\t\t\t\tCreate 'columns' table, to be used for the final output.\n\t\t\t*/\n\t\t\tproc sql noprint;\n\t\t\t\tcreate table columns as \n\t\t\t\t\tselect distinct \n\t\t\t\t\t\tBF.name as columnid length=64, \n\t\t\t\t\t\tBF.xref as xref length=64,\n\t\t\t\t\t\tBF.label as label length=64,\n\t\t\t\t\t\tBF._element as columnType length=32,\n\t\t\t\t\t\tBF.ordinal_businessItemFolder as data, \n\t\t\t\t\t\t\"\" as dataset length=128,\n\t\t\t\t\t\t%if &table_exists %then %do;\n\t\t\t\t\t\t\tie.value as expression length=512,\n\t\t\t\t\t\t\tie.value as expression_raw length=512\n\t\t\t\t\t\t%end;\n\t\t\t\t\t\t%else %do;\n\t\t\t\t\t\t\t\"\" as expression length=512,\n\t\t\t\t\t\t\t\"\" as expression_raw length=512\n\t\t\t\t\t\t%end; \n\t\t\t\t\tfrom \n\t\t\t\t\t\tresp.BUSINESSITEMFOLDER_ITEMS BF \n\t\t\t\t\t\t\tleft outer join resp.DATADEFINITIONS_BUSINESSITEMS DF on BF.name = DF.base\n\t\t\t\t\t\t\t%if &table_exists %then %do;\n\t\t\t\t\t\t\t\tleft outer join resp.items_expression ie on bf.ordinal_items = ie.ordinal_items\n\t\t\t\t\t\t\t%end;\n\t\t\t\t\twhere \n\t\t\t\t\t\tBF._element in \n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t'DataItem', \n\t\t\t\t\t\t\t'CalculatedItem',\n\t\t\t\t\t\t\t'AggregateCalculatedItem',\n\t\t\t\t\t\t\t'DataSource_PredefinedDataItem'\n\t\t\t\t\t\t);\n\t\t\tquit;\n\n\t\t\t/*\n\t\t\t\tFor specific reports the columns graphType and data do not exist.\n\t\t\t*/\n\t\t\t%let columnExists_gt = 0;\n\t\t\t%let columnExists_d = 0;\n\t\t\t%let dsid = %sysfunc(open(resp.visualelements));\n\t\t\t%if &dsid > 0 %then %do;\n\t\t\t\t%let columnExists_gt = %sysfunc(varnum(&dsid, graphType));\n\t\t\t\t%let columnExists_d = %sysfunc(varnum(&dsid, data));\n\t\t\t%end;\n\t\t\t%let rc = %sysfunc(close(&dsid));\n\n\t\t\t/*\n\t\t\t\tFor specific reports the column valueVariable does not exist.\n\t\t\t*/\n\t\t\t%let columnExists_vv = 0;\n\t\t\t%let dsid = %sysfunc(open(resp.VISUALELEMENTS_PROMPTVISUAL));\n\t\t\t%if &dsid > 0 %then %do;\n\t\t\t\t%let columnExists_vv = %sysfunc(varnum(&dsid, valueVariable));\n\t\t\t%end;\n\t\t\t%let rc = %sysfunc(close(&dsid));\n\t\t\t\n\t\t\t/*\n\t\t\t\tCreate table, which will be used to enrich the 'base' resulting table.\n\t\t\t*/\n\t\t\tproc sql noprint;\n\t\t\t\tcreate table report_detail_lineage as\n\t\t\t\t\tselect\n\t\t\t\t\t\t(t1.labelattribute) as reportelement_name length=64,\n\t\t\t\t\t\t%if &columnExists_gt %then %do;\n\t\t\t\t\t\t\tkstrip(t1._element) || \n\t\t\t\t\t\t\tcase \n\t\t\t\t\t\t\t\twhen t1.graphType ~= '' then ' - ' || kstrip(t1.graphType) \n\t\t\t\t\t\t\t\telse '' \n\t\t\t\t\t\t\tend as reportelement_type length=64,\n\t\t\t\t\t\t%end;\n\t\t\t\t\t\t%else %do;\n\t\t\t\t\t\t\tkstrip(t1._element) as reportelement_type length=64,\n\t\t\t\t\t\t%end;\t\n\t\t\t\t\t\t(t4.label) as sourceTableName length=64,\n\t\t\t\t\t\t(t6._element) as reportColumnType length=32,\n\t\t\t\t\t\t(t6.name) as columnId length=64,\n\t\t\t\t\t\t(coalesce(t6.xref, t6.label)) as columNname length=64\n\t\t\t\t\tfrom\n\t\t\t\t\t\tresp.visualelements t1\n\t\t\t\t\t\t\tinner join resp.visualelements_datalist t2 on (t1.ordinal_visualelements = t2.ordinal_visualelements)\n\t\t\t\t\t\t\tinner join resp.datadefinitions t3 on (t2.datalist1 = t3.name)\n\t\t\t\t\t\t\tinner join resp.datasources t4 on (t3.source = t4.name)\n\t\t\t\t\t\t\tinner join resp.datadefinitions_businessitems t5 on (t3.ordinal_datadefinitions = t5.ordinal_datadefinitions)\n\t\t\t\t\t\t\tinner join resp.businessitemfolder_items t6 on (t5.base = t6.name)\n\n\t\t\t\t\t%if &columnExists_vv %then %do;\n\t\t\t\t\t\tunion all\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tAdd metadata in case the column VISUALELEMENTS_PROMPTVISUAL.valueVariable exists.\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t(t1.labelattribute) as reportelement_name length=64,\n\t\t\t\t\t\t\tkstrip(t2._element) as reportelement_type length=64,\n\t\t\t\t\t\t\t(t5.label) as sourceTableName length=64,\n\t\t\t\t\t\t\t(t6._element) as reportColumnType length=32,\n\t\t\t\t\t\t\t(t6.name) as columnId length=64,\n\t\t\t\t\t\t\t(coalesce(t6.xref, t6.label)) as columNname length=64\t\t\t\t\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\tresp.visualelements t1\n\t\t\t\t\t\t\t\tinner join resp.VISUALELEMENTS_PROMPTVISUAL t2 on (t1.ordinal_visualelements = t2.ordinal_visualelements)\n\t\t\t\t\t\t\t\tinner join resp.DATADEFINITIONS_BUSINESSITEMS t3 on (t2.valueVariable = t3.name)\n\t\t\t\t\t\t\t\tinner join resp.DATADEFINITIONS t4 on (t3.ordinal_dataDefinitions = t4.ordinal_dataDefinitions)\n\t\t\t\t\t\t\t\tinner join resp.datasources t5 on (t4.source = t5.name)\n\t\t\t\t\t\t\t\tinner join resp.businessitemfolder_items t6 on (t3.base = t6.name)\n\t\t\t\t\t%end;\t\t\t\t\t\t\n\t\t\t\t\t%if &columnExists_d and %sysfunc(exist(RESP.VISUALELEMENTS_PROMPTVISUAL)) %then %do;\n\t\t\t\t\t\tunion all\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tAdd metadata in case the column VISUALELEMENTS.data exists.\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tselect \n\t\t\t\t\t\t\tt1.labelattribute as reportElement_name length=64,\n\t\t\t\t\t\t\tkstrip(t1._element) as reportElement_type length=64,\n\t\t\t\t\t\t\tt7.label as sourceTableName length=64,\n\t\t\t\t\t\t\tt4._element as reportColumnType length=32,\n\t\t\t\t\t\t\tt4.name as columnId length=64,\n\t\t\t\t\t\t\tcoalesce(t4.xref, t4.label) as columnName length=64\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\tresp.visualelements t1\n\t\t\t\t\t\t\tinner join resp.datadefinitions t2 on t1.data = t2.name\n\t\t\t\t\t\t\tinner join resp.DATADEFINITIONS_BUSINESSITEMS t3 on t2.ordinal_dataDefinitions = t3.ordinal_dataDefinitions\n\t\t\t\t\t\t\tinner join resp.DATADEFINITIONS t6 on (t3.ordinal_dataDefinitions = t6.ordinal_dataDefinitions)\n\t\t\t\t\t\t\tinner join resp.datasources t7 on (t6.source = t7.name)\n\t\t\t\t\t\t\tinner join resp.BUSINESSITEMFOLDER_ITEMS t4 on t3.base = t4.name\n\t\t\t\t\t\t\tleft outer join resp.VISUALELEMENTS_PROMPTVISUAL t5 on t1.ordinal_visualElements = t5.ordinal_visualElements\n\t\t\t\t\t\twhere \n\t\t\t\t\t\t\tt5.ordinal_visualElements is null\n\t\t\t\t\t%end;\n\t\t\t/*\n\t\t\t\tNote the additional ;\n\t\t\t*/\n\t\t\t;quit;\n\n\t\t\t%let report_object = \"\";\n\t\t\tproc sql noprint;\n\t\t\t\tselect distinct\n\t\t\t\t\tquote(columnid) into :report_object separated by ' '\n\t\t\t\tfrom\n\t\t\t\t\treport_detail_lineage;\n\t\t\tquit;\n\n\t\t\t%let calculated = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_EXPRESSION, \n\t\t\t\titem=calculated, \n\t\t\t\tcolumns_key=dummy, \n\t\t\t\titem_key=value\n\t\t\t);\n\n\t\t\t%let custom_category = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_GROUPINGPARAMETERS, \n\t\t\t\titem=custom_category, \n\t\t\t\tcolumns_key=name, \n\t\t\t\titem_key=parameter\n\t\t\t);\n\n\t\t\t%let hierarchy = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_LEVELLIST, \n\t\t\t\titem=hierarchy, \n\t\t\t\tcolumns_key=name, \n\t\t\t\titem_key=reference\n\t\t\t);\n\n\t\t\t%let geo = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_GEOINFOS, \n\t\t\t\titem=geo, \n\t\t\t\tcolumns_key=ordinal_items, \n\t\t\t\titem_key=ordinal_items\n\t\t\t);\n\n\t\t\t%let primary_key = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_PRIMARYKEY, \n\t\t\t\titem=primary_key, \n\t\t\t\tcolumns_key=ordinal_items, \n\t\t\t\titem_key=ordinal_items\n\t\t\t);\n\n\t\t\t%let partition = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_PARTITIONS, \n\t\t\t\titem=partition, \n\t\t\t\tcolumns_key=ordinal_items, \n\t\t\t\titem_key=ordinal_items\n\t\t\t);\n\n\t\t\t%let editor_properties = \"\";\n\t\t\t%columns_in_item\n\t\t\t(\n\t\t\t\tdataset=ITEMS_EDITORPROPERTIES, \n\t\t\t\titem=editor_properties, \n\t\t\t\tcolumns_key=ordinal_items, \n\t\t\t\titem_key=ordinal_items\n\t\t\t);\n\n\t\t\t/*\n\t\t\t\tUpdate 'columns' table with data source table.\n\t\t\t*/\n\t\t\tproc sql noprint;\n\t\t\t\tupdate\n\t\t\t\t\tcolumns\n\t\t\t\tset \n\t\t\t\t\tdataset =\n\t\t\t\t\t(\n\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\tresp.datasources ds\n\t\t\t\t\t\twhere\n\t\t\t\t\t\t\tds.ordinal_dataSources = columns.data\n\t\t\t\t\t)\n\t\t\t\twhere\n\t\t\t\t\tcolumns.data in\n\t\t\t\t\t(\n\t\t\t\t\t\tselect \n\t\t\t\t\t\t\tordinal_dataSources\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\tresp.datasources\n\t\t\t\t\t);\n\t\t\tquit;\n\n\t\t\tproc sql noprint;\n\t\t\t\tcreate table &_output1 as\n\t\t\t\tselect\n\t\t\t\t\t\"&reportId\" as reportId length=64,\n\t\t\t\t\t\"&reportName\" as reportName length=128,\n\t\t\t\t\t\"&path\" as reportContentFolder length=256,\n\t\t\t\t\t\"&reportCreatedBy\" as reportCreator length=128,\n\t\t\t\t\t\"&reportModifiedBy\" as reportModifier length=128,\n\t\t\t\t\t\"&reportCreateTS\"dt as reportCreateTS length=8 format=datetime.,\n\t\t\t\t\t\"&reportUpdateTS\"dt as reportUpdateTS length=8 format=datetime.,\n\t\t\t\t\tupcase(cr.library) as library length=32,\n\t\t\t\t\tc.dataset,\n\t\t\t\t\tc.columnid as columnId,\n\t\t\t\t\tc.xref as columnName,\n\t\t\t\t\tc.label as columnLabel,\n\t\t\t\t\tc.columnType,\n\t\t\t\t\trdl.reportelement_name,\n\t\t\t\t\trdl.reportelement_type,\n\t\t\t\t\tc.expression_raw,\n\t\t\t\t\tc.expression,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&report_object) then 'Y' else 'N'\n\t\t\t\t\tend as in_report_object,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&calculated) then 'Y' else 'N'\n\t\t\t\t\tend as in_calculated,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&custom_category) then 'Y' else 'N'\n\t\t\t\t\tend as in_custom_category,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&hierarchy) then 'Y' else 'N'\n\t\t\t\t\tend as in_hierarchy,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&geo) then 'Y' else 'N'\n\t\t\t\t\tend as in_geo,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&primary_key) then 'Y' else 'N'\n\t\t\t\t\tend as in_primary_key,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&partition) then 'Y' else 'N'\n\t\t\t\t\tend as in_partition,\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen c.columnid in (&editor_properties) then 'Y' else 'N'\n\t\t\t\t\tend as in_editor_properties\n\t\t\t\tfrom\n\t\t\t\t\tresp.datasources_casresource cr \n\t\t\t\t\t\tleft join columns c on  cr.table = c.dataset\n\t\t\t\t\t\tleft outer join report_detail_lineage rdl on c.columnid = rdl.columnid and rdl.reportelement_name is not null;\n\t\t\tquit;\n\n\t\t\tproc sort data=&_output1 nodupkey;\n\t\t\t\tby _all_;\n\t\t\trun;\n\n\t\t\t* ### START OF CHANGE 26.07.2023 #GERMHN ... Enhance output: *;\n\n\t\t\t* set ColumnName=ColumnLabel when ColumnName is empty *;\n\t\t\tproc sql;\n  \t\t\t\tupdate \n\t\t\t\t\t&_output1\n  \t\t\t\tset \n\t\t\t\t\tColumnName=ColumnLabel \n\t\t\t\twhere \n\t\t\t\t\tColumnName='';\n\t\t\tquit;\n\n\t\t\t/* \n\t\t\t\tcreate mapping columnID->columnName, also include parameters from prompts!\n\n\t\t\t\tSNLRGO: Note that the column LABEL might not exist in the PROMPTDEFINITIONS table...\n\t\t\t*/;\n\n\t\t\t%let columnExists = 0;\n\t\t\t%let dsid = %sysfunc(open(resp.PROMPTDEFINITIONS));\n\t\t\t%if &dsid > 0 %then %do;\n\t\t\t\t%let columnExists = %sysfunc(varnum(&dsid, label));\n\t\t\t%end;\n\t\t\t%let rc = %sysfunc(close(&dsid));\n\n\t\t\tproc sql;\n  \t\t\t\tcreate table report_metadata_column_names as\n    \t\t\tselect distinct \n\t\t\t\t\tcolumnID, \n\t\t\t\t\tcolumnName\n    \t\t\tfrom \n\t\t\t\t\t&_output1 \n\t\t\t\twhere \n\t\t\t\t\tcolumnName ne ''\n\t\t\t\t/* \n\t\t\t\t\tOnly run the following code in case the table and column exists.\n\t\t\t\t*/\n  \t\t\t\t%if %sysfunc(exist(resp.PROMPTDEFINITIONS)) and &columnExists %then %do;\n\t\t\t\t\tunion\n    \t\t\t\tselect \n\t\t\t\t\t\tname as columnID, \n\t\t\t\t\t\tlabel as columnName\n      \t\t\t\tfrom \n\t\t\t\t\t\tRESP.PROMPTDEFINITIONS\n\t      \t\t\twhere \n\t\t\t\t\t\tlabel ne \"\"\t\n\t\t\t\t%end;\n\t\t\t\torder by \n\t\t\t\t\tcolumnID desc\n\t\t\t\t;\n\t\t\tquit; \n\n\t\t\t* translate columnID -> columnName inside all expression via TRANWRD *; \n\t\t\tdata &_output1(drop=dsid rc);\n  \t\t\t\tset \n\t\t\t\t\t&_output1;\n  \t\t\t\tif expression ne \"\" then do;\n    \t\t\t\tdsid=open('WORK.report_metadata_column_names','i');\n    \t\t\t\trc=fetch(dsid);\n    \t\t\t\tdo while(rc = 0);\n      \t\t\t\t\texpression=tranwrd(expression, trim(getvarc(dsid,varnum(dsid,'ColumnID'))), trim(getvarc(dsid,varnum(dsid,'ColumnName'))));\n      \t\t\t\t\trc=fetch(dsid);\n    \t\t\t\tend;\n    \t\t\t\trc=close(dsid);\n  \t\t\t\tend;\n\t\t\trun;\n\n\t\t\t* ### END OF CHANGE 26.07.2023 #GERMHN ... enhance output: *;\n\n\t\t%end;\n\t\t%else %do;\n\t\t\t%put NOTE: Essential tables not available.;\n\t\t\t%put ERROR: Unable to extract report metadata for \"&reportName\".;\n\t\t%end;\n\t%end;\n\t%else %do;\n\t\t%put ERROR: No response file received.;\n\t%end;\n%mend;\n\n%GetReportResources\n(\n\treportName = %bquote(&reportName),\n\treportId = &reportId,\n\treportModifiedBy = &reportModifiedBy,\n\treportCreatedBy = &reportCreatedBy,\n\treportCreateTS = &reportCreateTS,\n\treportUpdateTS = &reportUpdateTS\n);\n\n/*\n\tClean-up user defined macros and macro variables.\n*/\n%symdel base_uri /nowarn;\n%symdel reportId /nowarn;\n%symdel reportName /nowarn;\n%symdel reportModifiedBy /nowarn;\n%symdel reportCreatedBy /nowarn;\n%symdel reportCreateTS /nowarn;\n%symdel reportUpdateTS /nowarn;\n%symdel table_exists /nowarn;\n%symdel columnExists_gt /nowarn;\n%symdel columnExists_vv /nowarn;\n%symdel columnExists_d /nowarn;\n%symdel dsid /nowarn;\n%symdel rc /nowarn;\n%symdel path /nowarn;\n%symdel columnExists /nowarn;\n\n%sysmacdelete columns_in_item /nowarn;\n%sysmacdelete GetReportResources /nowarn;"}}